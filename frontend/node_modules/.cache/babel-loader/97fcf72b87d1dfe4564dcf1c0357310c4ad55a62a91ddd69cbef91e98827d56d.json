{"ast":null,"code":"// import axios from 'axios';\n\n// const api = axios.create({ baseURL: 'http://127.0.0.1:8000/api' });\n\n// // --- Auth ---\n// export const loginUser = (username, password) => api.post('/token/', { username, password });\n// export const registerUser = (userData) => api.post('/register/', userData);\n\n// // --- Products ---\n// export const getProducts = () => api.get('/products/');\n// export const createProduct = (product) => api.post('/products/', product);\n// export const updateProduct = (id, product) => api.put(`/products/${id}/`, product);\n// export const deleteProduct = (id) => api.delete(`/products/${id}/`);\n\n// // --- Suppliers ---\n// export const getSuppliers = () => api.get('/suppliers/');\n// export const createSupplier = (supplier) => api.post('/suppliers/', supplier);\n// export const updateSupplier = (id, supplier) => api.put(`/suppliers/${id}/`, supplier);\n// export const deleteSupplier = (id) => api.delete(`/suppliers/${id}/`);\n\n// // --- Purchase Orders ---\n// export const getPurchaseOrders = () => api.get('/purchase-orders/');\n// export const createPurchaseOrder = (orderData) => api.post('/purchase-orders/', orderData);\n// export const receivePurchaseOrder = (id) => api.post(`/purchase-orders/${id}/receive/`);\n\n// // --- Sales Orders ---\n// export const getSalesOrders = () => api.get('/sales-orders/');\n// export const createSalesOrder = (orderData) => api.post('/sales-orders/', orderData);\n\n// // --- Transactions & Dashboard ---\n// export const getTransactions = (params) => api.get('/transactions/', { params });\n// export const getDashboardStats = () => api.get('/dashboard-stats/');\n\n// // Add this function to fetch the barcode image data\n// export const getBarcode = (sku) => {\n//     return api.get(`/products/${sku}/barcode/`, {\n//         responseType: 'blob', // Important: we expect image data, not JSON\n//     });\n// };\n\n// export default api;\n\n// src/api/index.js\nimport axios from 'axios';\n\n// Create a new Axios instance\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api'\n});\n\n// Use an interceptor to automatically add the auth token to every request\napi.interceptors.request.use(config => {\n  const authTokens = localStorage.getItem('authTokens');\n  if (authTokens) {\n    const token = JSON.parse(authTokens).access;\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// --- Auth ---\nexport const loginUser = (username, password) => api.post('/token/', {\n  username,\n  password\n});\nexport const registerUser = userData => api.post('/register/', userData);\n\n// --- Profile Management ---\nexport const getUserProfile = () => api.get('/users/me/');\nexport const updateUserProfile = userData => api.patch('/users/me/', userData);\nexport const changePassword = passwordData => api.put('/change-password/', passwordData);\n\n// --- Products ---\nexport const getProducts = () => api.get('/products/');\nexport const createProduct = product => api.post('/products/', product);\nexport const updateProduct = (id, product) => api.put(`/products/${id}/`, product);\nexport const deleteProduct = id => api.delete(`/products/${id}/`);\nexport const getBarcode = sku => api.get(`/products/${sku}/barcode/`, {\n  responseType: 'blob'\n});\n\n// --- Suppliers ---\nexport const getSuppliers = () => api.get('/suppliers/');\nexport const createSupplier = supplier => api.post('/suppliers/', supplier);\nexport const updateSupplier = (id, supplier) => api.put(`/suppliers/${id}/`, supplier);\nexport const deleteSupplier = id => api.delete(`/suppliers/${id}/`);\n\n// --- Purchase Orders ---\nexport const getPurchaseOrders = () => api.get('/purchase-orders/');\nexport const createPurchaseOrder = orderData => api.post('/purchase-orders/', orderData);\nexport const receivePurchaseOrder = id => api.post(`/purchase-orders/${id}/receive/`);\n\n// --- Sales Orders ---\nexport const getSalesOrders = () => api.get('/sales-orders/');\nexport const createSalesOrder = orderData => api.post('/sales-orders/', orderData);\n\n// --- Dashboard & Reports ---\nexport const getDashboardStats = () => api.get('/dashboard-stats/');\nexport const getTransactions = params => api.get('/transactions/', {\n  params\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","authTokens","localStorage","getItem","token","JSON","parse","access","headers","error","Promise","reject","loginUser","username","password","post","registerUser","userData","getUserProfile","get","updateUserProfile","patch","changePassword","passwordData","put","getProducts","createProduct","product","updateProduct","id","deleteProduct","delete","getBarcode","sku","responseType","getSuppliers","createSupplier","supplier","updateSupplier","deleteSupplier","getPurchaseOrders","createPurchaseOrder","orderData","receivePurchaseOrder","getSalesOrders","createSalesOrder","getDashboardStats","getTransactions","params"],"sources":["/Users/abr/DAMN/inventory-system/frontend/src/services/api.js"],"sourcesContent":["// import axios from 'axios';\n\n// const api = axios.create({ baseURL: 'http://127.0.0.1:8000/api' });\n\n// // --- Auth ---\n// export const loginUser = (username, password) => api.post('/token/', { username, password });\n// export const registerUser = (userData) => api.post('/register/', userData);\n\n// // --- Products ---\n// export const getProducts = () => api.get('/products/');\n// export const createProduct = (product) => api.post('/products/', product);\n// export const updateProduct = (id, product) => api.put(`/products/${id}/`, product);\n// export const deleteProduct = (id) => api.delete(`/products/${id}/`);\n\n// // --- Suppliers ---\n// export const getSuppliers = () => api.get('/suppliers/');\n// export const createSupplier = (supplier) => api.post('/suppliers/', supplier);\n// export const updateSupplier = (id, supplier) => api.put(`/suppliers/${id}/`, supplier);\n// export const deleteSupplier = (id) => api.delete(`/suppliers/${id}/`);\n\n// // --- Purchase Orders ---\n// export const getPurchaseOrders = () => api.get('/purchase-orders/');\n// export const createPurchaseOrder = (orderData) => api.post('/purchase-orders/', orderData);\n// export const receivePurchaseOrder = (id) => api.post(`/purchase-orders/${id}/receive/`);\n\n// // --- Sales Orders ---\n// export const getSalesOrders = () => api.get('/sales-orders/');\n// export const createSalesOrder = (orderData) => api.post('/sales-orders/', orderData);\n\n// // --- Transactions & Dashboard ---\n// export const getTransactions = (params) => api.get('/transactions/', { params });\n// export const getDashboardStats = () => api.get('/dashboard-stats/');\n\n// // Add this function to fetch the barcode image data\n// export const getBarcode = (sku) => {\n//     return api.get(`/products/${sku}/barcode/`, {\n//         responseType: 'blob', // Important: we expect image data, not JSON\n//     });\n// };\n\n// export default api;\n\n// src/api/index.js\nimport axios from 'axios';\n\n// Create a new Axios instance\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api',\n});\n\n// Use an interceptor to automatically add the auth token to every request\napi.interceptors.request.use(\n  (config) => {\n    const authTokens = localStorage.getItem('authTokens');\n    if (authTokens) {\n      const token = JSON.parse(authTokens).access;\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// --- Auth ---\nexport const loginUser = (username, password) => api.post('/token/', { username, password });\nexport const registerUser = (userData) => api.post('/register/', userData);\n\n// --- Profile Management ---\nexport const getUserProfile = () => api.get('/users/me/');\nexport const updateUserProfile = (userData) => api.patch('/users/me/', userData);\nexport const changePassword = (passwordData) => api.put('/change-password/', passwordData);\n\n// --- Products ---\nexport const getProducts = () => api.get('/products/');\nexport const createProduct = (product) => api.post('/products/', product);\nexport const updateProduct = (id, product) => api.put(`/products/${id}/`, product);\nexport const deleteProduct = (id) => api.delete(`/products/${id}/`);\nexport const getBarcode = (sku) => api.get(`/products/${sku}/barcode/`, { responseType: 'blob' });\n\n// --- Suppliers ---\nexport const getSuppliers = () => api.get('/suppliers/');\nexport const createSupplier = (supplier) => api.post('/suppliers/', supplier);\nexport const updateSupplier = (id, supplier) => api.put(`/suppliers/${id}/`, supplier);\nexport const deleteSupplier = (id) => api.delete(`/suppliers/${id}/`);\n\n// --- Purchase Orders ---\nexport const getPurchaseOrders = () => api.get('/purchase-orders/');\nexport const createPurchaseOrder = (orderData) => api.post('/purchase-orders/', orderData);\nexport const receivePurchaseOrder = (id) => api.post(`/purchase-orders/${id}/receive/`);\n\n// --- Sales Orders ---\nexport const getSalesOrders = () => api.get('/sales-orders/');\nexport const createSalesOrder = (orderData) => api.post('/sales-orders/', orderData);\n\n// --- Dashboard & Reports ---\nexport const getDashboardStats = () => api.get('/dashboard-stats/');\nexport const getTransactions = (params) => api.get('/transactions/', { params });\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}