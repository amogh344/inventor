{"ast":null,"code":"var _jsxFileName = \"/Users/abr/DAMN/inventory-system/frontend/src/pages/ConfirmPasswordResetPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { confirmPasswordReset } from '../services/api'; // Correct path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConfirmPasswordResetPage() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setError('Passwords do not match.');\n      return;\n    }\n    setError('');\n    setMessage('');\n    try {\n      await confirmPasswordReset(token, password);\n      setMessage('Your password has been successfully reset! Redirecting to login...');\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (err) {\n      setError('Invalid or expired token. Please request a new password reset.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5 d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '400px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Set New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password2,\n              onChange: e => setPassword2(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Back to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ConfirmPasswordResetPage, \"QORsFTVeXuFJ4A9Ee6dpr8bOJSs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ConfirmPasswordResetPage;\nexport default ConfirmPasswordResetPage;\nvar _c;\n$RefreshReg$(_c, \"ConfirmPasswordResetPage\");","map":{"version":3,"names":["React","useState","Container","Form","Button","Card","Alert","useParams","useNavigate","Link","confirmPasswordReset","jsxDEV","_jsxDEV","ConfirmPasswordResetPage","_s","password","setPassword","password2","setPassword2","message","setMessage","error","setError","token","navigate","handleSubmit","e","preventDefault","setTimeout","err","className","children","style","width","Body","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","Label","Control","type","value","onChange","target","required","Footer","to","_c","$RefreshReg$"],"sources":["/Users/abr/DAMN/inventory-system/frontend/src/pages/ConfirmPasswordResetPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { confirmPasswordReset } from '../services/api'; // Correct path\n\nfunction ConfirmPasswordResetPage() {\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const { token } = useParams();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setError('Passwords do not match.');\n      return;\n    }\n    setError('');\n    setMessage('');\n    try {\n      await confirmPasswordReset(token, password);\n      setMessage('Your password has been successfully reset! Redirecting to login...');\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (err) {\n      setError('Invalid or expired token. Please request a new password reset.');\n    }\n  };\n\n  return (\n    <Container className=\"mt-5 d-flex justify-content-center\">\n      <Card style={{ width: '400px' }}>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Set New Password</h2>\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>New Password</Form.Label>\n              <Form.Control type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Confirm New Password</Form.Label>\n              <Form.Control type=\"password\" value={password2} onChange={(e) => setPassword2(e.target.value)} required />\n            </Form.Group>\n            <div className=\"d-grid\">\n              <Button variant=\"primary\" type=\"submit\">\n                Reset Password\n              </Button>\n            </div>\n          </Form>\n        </Card.Body>\n        <Card.Footer className=\"text-center\">\n          <Link to=\"/login\">Back to Login</Link>\n        </Card.Footer>\n      </Card>\n    </Container>\n  );\n}\n\nexport default ConfirmPasswordResetPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}