{"ast":null,"code":"var _jsxFileName = \"/Users/abr/DAMN/inventory-system/frontend/src/components/AuthenticatedImage.js\",\n  _s = $RefreshSig$();\n// src/components/AuthenticatedImage.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticatedImage({\n  fetchImage,\n  alt,\n  style\n}) {\n  _s();\n  const [imageSrc, setImageSrc] = useState('');\n  useEffect(() => {\n    let objectUrl;\n    const loadImage = async () => {\n      try {\n        const response = await fetchImage();\n        objectUrl = URL.createObjectURL(response.data);\n        setImageSrc(objectUrl);\n      } catch (error) {\n        console.error(\"Failed to load authenticated image\", error);\n      }\n    };\n    loadImage();\n    return () => {\n      if (objectUrl) {\n        URL.revokeObjectURL(objectUrl); // Free up memory when the component unmounts\n      }\n    };\n  }, [fetchImage]); // Rerun if the fetchImage function changes\n\n  if (!imageSrc) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: imageSrc,\n    alt: alt,\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthenticatedImage, \"SKKNhRUrs1C6QGQOr7y5P6AONhw=\");\n_c = AuthenticatedImage;\nexport default AuthenticatedImage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticatedImage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AuthenticatedImage","fetchImage","alt","style","_s","imageSrc","setImageSrc","objectUrl","loadImage","response","URL","createObjectURL","data","error","console","revokeObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["/Users/abr/DAMN/inventory-system/frontend/src/components/AuthenticatedImage.js"],"sourcesContent":["// src/components/AuthenticatedImage.js\nimport React, { useState, useEffect } from 'react';\n\nfunction AuthenticatedImage({ fetchImage, alt, style }) {\n  const [imageSrc, setImageSrc] = useState('');\n\n  useEffect(() => {\n    let objectUrl;\n    const loadImage = async () => {\n      try {\n        const response = await fetchImage();\n        objectUrl = URL.createObjectURL(response.data);\n        setImageSrc(objectUrl);\n      } catch (error) {\n        console.error(\"Failed to load authenticated image\", error);\n      }\n    };\n\n    loadImage();\n\n    return () => {\n      if (objectUrl) {\n        URL.revokeObjectURL(objectUrl); // Free up memory when the component unmounts\n      }\n    };\n  }, [fetchImage]); // Rerun if the fetchImage function changes\n\n  if (!imageSrc) {\n    return <span>Loading...</span>;\n  }\n  \n  return <img src={imageSrc} alt={alt} style={style} />;\n}\n\nexport default AuthenticatedImage;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,kBAAkBA,CAAC;EAAEC,UAAU;EAAEC,GAAG;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAIU,SAAS;IACb,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,UAAU,CAAC,CAAC;QACnCM,SAAS,GAAGG,GAAG,CAACC,eAAe,CAACF,QAAQ,CAACG,IAAI,CAAC;QAC9CN,WAAW,CAACC,SAAS,CAAC;MACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;IAEX,OAAO,MAAM;MACX,IAAID,SAAS,EAAE;QACbG,GAAG,CAACK,eAAe,CAACR,SAAS,CAAC,CAAC,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB,IAAI,CAACI,QAAQ,EAAE;IACb,oBAAON,OAAA;MAAAiB,QAAA,EAAM;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAChC;EAEA,oBAAOrB,OAAA;IAAKsB,GAAG,EAAEhB,QAAS;IAACH,GAAG,EAAEA,GAAI;IAACC,KAAK,EAAEA;EAAM;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvD;AAAChB,EAAA,CA7BQJ,kBAAkB;AAAAsB,EAAA,GAAlBtB,kBAAkB;AA+B3B,eAAeA,kBAAkB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}