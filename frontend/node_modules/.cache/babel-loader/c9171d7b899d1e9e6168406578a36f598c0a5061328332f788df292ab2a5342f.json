{"ast":null,"code":"// import axios from 'axios';\n// const api = axios.create({ baseURL: 'http://127.0.0.1:8000/api' });\n// // --- Auth ---\n// export const loginUser = (username, password) => api.post('/token/', { username, password });\n// export const registerUser = (userData) => api.post('/register/', userData);\n// // --- Products ---\n// export const getProducts = () => api.get('/products/');\n// export const createProduct = (product) => api.post('/products/', product);\n// export const updateProduct = (id, product) => api.put(`/products/${id}/`, product);\n// export const deleteProduct = (id) => api.delete(`/products/${id}/`);\n// // --- Suppliers ---\n// export const getSuppliers = () => api.get('/suppliers/');\n// export const createSupplier = (supplier) => api.post('/suppliers/', supplier);\n// export const updateSupplier = (id, supplier) => api.put(`/suppliers/${id}/`, supplier);\n// export const deleteSupplier = (id) => api.delete(`/suppliers/${id}/`);\n// // --- Purchase Orders ---\n// export const getPurchaseOrders = () => api.get('/purchase-orders/');\n// export const createPurchaseOrder = (orderData) => api.post('/purchase-orders/', orderData);\n// export const receivePurchaseOrder = (id) => api.post(`/purchase-orders/${id}/receive/`);\n// // --- Sales Orders ---\n// export const getSalesOrders = () => api.get('/sales-orders/');\n// export const createSalesOrder = (orderData) => api.post('/sales-orders/', orderData);\n// // --- Transactions & Dashboard ---\n// export const getTransactions = (params) => api.get('/transactions/', { params });\n// export const getDashboardStats = () => api.get('/dashboard-stats/');\n// // Add this function to fetch the barcode image data\n// export const getBarcode = (sku) => {\n//     return api.get(`/products/${sku}/barcode/`, {\n//         responseType: 'blob', // Important: we expect image data, not JSON\n//     });\n// };\n// export default api;\n// src/api/index.js\nimport axios from'axios';// Create a new Axios instance\nconst api=axios.create({baseURL:'http://127.0.0.1:8000/api'});// Use an interceptor to automatically add the auth token to every request\napi.interceptors.request.use(config=>{const authTokens=localStorage.getItem('authTokens');if(authTokens){const token=JSON.parse(authTokens).access;config.headers['Authorization']=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// --- Auth ---\nexport const loginUser=(username,password)=>api.post('/token/',{username,password});export const registerUser=userData=>api.post('/register/',userData);// --- Profile Management ---\nexport const getUserProfile=()=>api.get('/users/me/');export const updateUserProfile=userData=>api.patch('/users/me/',userData);export const changePassword=passwordData=>api.put('/change-password/',passwordData);// --- Products ---\nexport const getProducts=()=>api.get('/products/');export const createProduct=product=>api.post('/products/',product);export const updateProduct=(id,product)=>api.put(\"/products/\".concat(id,\"/\"),product);export const deleteProduct=id=>api.delete(\"/products/\".concat(id,\"/\"));export const getBarcode=sku=>api.get(\"/products/\".concat(sku,\"/barcode/\"),{responseType:'blob'});// --- Suppliers ---\nexport const getSuppliers=()=>api.get('/suppliers/');export const createSupplier=supplier=>api.post('/suppliers/',supplier);export const updateSupplier=(id,supplier)=>api.put(\"/suppliers/\".concat(id,\"/\"),supplier);export const deleteSupplier=id=>api.delete(\"/suppliers/\".concat(id,\"/\"));// --- Purchase Orders ---\nexport const getPurchaseOrders=()=>api.get('/purchase-orders/');export const createPurchaseOrder=orderData=>api.post('/purchase-orders/',orderData);export const receivePurchaseOrder=id=>api.post(\"/purchase-orders/\".concat(id,\"/receive/\"));// --- Sales Orders ---\nexport const getSalesOrders=()=>api.get('/sales-orders/');export const createSalesOrder=orderData=>api.post('/sales-orders/',orderData);// --- Dashboard & Reports ---\nexport const getDashboardStats=()=>api.get('/dashboard-stats/');export const getTransactions=params=>api.get('/transactions/',{params});export const getQRCode=sku=>api.get(\"/products/\".concat(sku,\"/qrcode/\"),{responseType:'blob'});export const requestPasswordReset=email=>api.post('/password_reset/',{email});export const confirmPasswordReset=(token,password)=>api.post('/password_reset/confirm/',{token,password});export default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","authTokens","localStorage","getItem","token","JSON","parse","access","headers","concat","error","Promise","reject","loginUser","username","password","post","registerUser","userData","getUserProfile","get","updateUserProfile","patch","changePassword","passwordData","put","getProducts","createProduct","product","updateProduct","id","deleteProduct","delete","getBarcode","sku","responseType","getSuppliers","createSupplier","supplier","updateSupplier","deleteSupplier","getPurchaseOrders","createPurchaseOrder","orderData","receivePurchaseOrder","getSalesOrders","createSalesOrder","getDashboardStats","getTransactions","params","getQRCode","requestPasswordReset","email","confirmPasswordReset"],"sources":["/Users/abr/DAMN/inventory-system/frontend/src/services/api.js"],"sourcesContent":["// import axios from 'axios';\n\n// const api = axios.create({ baseURL: 'http://127.0.0.1:8000/api' });\n\n// // --- Auth ---\n// export const loginUser = (username, password) => api.post('/token/', { username, password });\n// export const registerUser = (userData) => api.post('/register/', userData);\n\n// // --- Products ---\n// export const getProducts = () => api.get('/products/');\n// export const createProduct = (product) => api.post('/products/', product);\n// export const updateProduct = (id, product) => api.put(`/products/${id}/`, product);\n// export const deleteProduct = (id) => api.delete(`/products/${id}/`);\n\n// // --- Suppliers ---\n// export const getSuppliers = () => api.get('/suppliers/');\n// export const createSupplier = (supplier) => api.post('/suppliers/', supplier);\n// export const updateSupplier = (id, supplier) => api.put(`/suppliers/${id}/`, supplier);\n// export const deleteSupplier = (id) => api.delete(`/suppliers/${id}/`);\n\n// // --- Purchase Orders ---\n// export const getPurchaseOrders = () => api.get('/purchase-orders/');\n// export const createPurchaseOrder = (orderData) => api.post('/purchase-orders/', orderData);\n// export const receivePurchaseOrder = (id) => api.post(`/purchase-orders/${id}/receive/`);\n\n// // --- Sales Orders ---\n// export const getSalesOrders = () => api.get('/sales-orders/');\n// export const createSalesOrder = (orderData) => api.post('/sales-orders/', orderData);\n\n// // --- Transactions & Dashboard ---\n// export const getTransactions = (params) => api.get('/transactions/', { params });\n// export const getDashboardStats = () => api.get('/dashboard-stats/');\n\n// // Add this function to fetch the barcode image data\n// export const getBarcode = (sku) => {\n//     return api.get(`/products/${sku}/barcode/`, {\n//         responseType: 'blob', // Important: we expect image data, not JSON\n//     });\n// };\n\n// export default api;\n\n// src/api/index.js\nimport axios from 'axios';\n\n// Create a new Axios instance\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api',\n});\n\n// Use an interceptor to automatically add the auth token to every request\napi.interceptors.request.use(\n  (config) => {\n    const authTokens = localStorage.getItem('authTokens');\n    if (authTokens) {\n      const token = JSON.parse(authTokens).access;\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// --- Auth ---\nexport const loginUser = (username, password) => api.post('/token/', { username, password });\nexport const registerUser = (userData) => api.post('/register/', userData);\n\n// --- Profile Management ---\nexport const getUserProfile = () => api.get('/users/me/');\nexport const updateUserProfile = (userData) => api.patch('/users/me/', userData);\nexport const changePassword = (passwordData) => api.put('/change-password/', passwordData);\n\n// --- Products ---\nexport const getProducts = () => api.get('/products/');\nexport const createProduct = (product) => api.post('/products/', product);\nexport const updateProduct = (id, product) => api.put(`/products/${id}/`, product);\nexport const deleteProduct = (id) => api.delete(`/products/${id}/`);\nexport const getBarcode = (sku) => api.get(`/products/${sku}/barcode/`, { responseType: 'blob' });\n\n// --- Suppliers ---\nexport const getSuppliers = () => api.get('/suppliers/');\nexport const createSupplier = (supplier) => api.post('/suppliers/', supplier);\nexport const updateSupplier = (id, supplier) => api.put(`/suppliers/${id}/`, supplier);\nexport const deleteSupplier = (id) => api.delete(`/suppliers/${id}/`);\n\n// --- Purchase Orders ---\nexport const getPurchaseOrders = () => api.get('/purchase-orders/');\nexport const createPurchaseOrder = (orderData) => api.post('/purchase-orders/', orderData);\nexport const receivePurchaseOrder = (id) => api.post(`/purchase-orders/${id}/receive/`);\n\n// --- Sales Orders ---\nexport const getSalesOrders = () => api.get('/sales-orders/');\nexport const createSalesOrder = (orderData) => api.post('/sales-orders/', orderData);\n\n// --- Dashboard & Reports ---\nexport const getDashboardStats = () => api.get('/dashboard-stats/');\nexport const getTransactions = (params) => api.get('/transactions/', { params });\n\n\nexport const getQRCode = (sku) => api.get(`/products/${sku}/qrcode/`, { responseType: 'blob' });\n\n\nexport const requestPasswordReset = (email) => api.post('/password_reset/', { email });\nexport const confirmPasswordReset = (token, password) => api.post('/password_reset/confirm/', { token, password });\n\n\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}