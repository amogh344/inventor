{"ast":null,"code":"var _jsxFileName = \"/Users/abr/DAMN/inventory-system/frontend/src/components/AuthenticatedImage.js\",\n  _s = $RefreshSig$();\n// src/components/AuthenticatedImage.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticatedImage({\n  fetchImage,\n  alt,\n  style\n}) {\n  _s();\n  const [imageSrc, setImageSrc] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    let isMounted = true; // To prevent state updates on unmounted component\n\n    const loadImage = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchImage();\n        const imageUrl = URL.createObjectURL(response.data);\n        if (isMounted) {\n          setImageSrc(imageUrl);\n        }\n      } catch (error) {\n        console.error(\"Failed to load authenticated image\", error);\n        if (isMounted) {\n          setImageSrc(null); // Could set to a placeholder error image\n        }\n      } finally {\n        if (isMounted) {\n          setLoading(false);\n        }\n      }\n    };\n    loadImage();\n\n    // Cleanup function\n    return () => {\n      isMounted = false;\n      if (imageSrc) {\n        URL.revokeObjectURL(imageSrc); // Free up memory\n      }\n    };\n  }, [fetchImage, imageSrc]); // Rerun if the fetch function changes\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  if (!imageSrc) return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: imageSrc,\n    alt: alt,\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthenticatedImage, \"+mbKLVxo2WK7R24tQPo7lbfidhU=\");\n_c = AuthenticatedImage;\nexport default AuthenticatedImage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticatedImage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AuthenticatedImage","fetchImage","alt","style","_s","imageSrc","setImageSrc","loading","setLoading","isMounted","loadImage","response","imageUrl","URL","createObjectURL","data","error","console","revokeObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","src","_c","$RefreshReg$"],"sources":["/Users/abr/DAMN/inventory-system/frontend/src/components/AuthenticatedImage.js"],"sourcesContent":["// src/components/AuthenticatedImage.js\nimport React, { useState, useEffect } from 'react';\n\nfunction AuthenticatedImage({ fetchImage, alt, style }) {\n  const [imageSrc, setImageSrc] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let isMounted = true; // To prevent state updates on unmounted component\n\n    const loadImage = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchImage();\n        const imageUrl = URL.createObjectURL(response.data);\n        if (isMounted) {\n          setImageSrc(imageUrl);\n        }\n      } catch (error) {\n        console.error(\"Failed to load authenticated image\", error);\n        if (isMounted) {\n          setImageSrc(null); // Could set to a placeholder error image\n        }\n      } finally {\n        if (isMounted) {\n          setLoading(false);\n        }\n      }\n    };\n\n    loadImage();\n\n    // Cleanup function\n    return () => {\n      isMounted = false;\n      if (imageSrc) {\n        URL.revokeObjectURL(imageSrc); // Free up memory\n      }\n    };\n  }, [fetchImage, imageSrc]); // Rerun if the fetch function changes\n\n  if (loading) return <span>Loading...</span>;\n  if (!imageSrc) return <span>Error</span>;\n  \n  return <img src={imageSrc} alt={alt} style={style} />;\n}\n\nexport default AuthenticatedImage;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,kBAAkBA,CAAC;EAAEC,UAAU;EAAEC,GAAG;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,GAAG,IAAI,CAAC,CAAC;;IAEtB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFF,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMG,QAAQ,GAAG,MAAMV,UAAU,CAAC,CAAC;QACnC,MAAMW,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACH,QAAQ,CAACI,IAAI,CAAC;QACnD,IAAIN,SAAS,EAAE;UACbH,WAAW,CAACM,QAAQ,CAAC;QACvB;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC1D,IAAIP,SAAS,EAAE;UACbH,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QACrB;MACF,CAAC,SAAS;QACR,IAAIG,SAAS,EAAE;UACbD,UAAU,CAAC,KAAK,CAAC;QACnB;MACF;IACF,CAAC;IAEDE,SAAS,CAAC,CAAC;;IAEX;IACA,OAAO,MAAM;MACXD,SAAS,GAAG,KAAK;MACjB,IAAIJ,QAAQ,EAAE;QACZQ,GAAG,CAACK,eAAe,CAACb,QAAQ,CAAC,CAAC,CAAC;MACjC;IACF,CAAC;EACH,CAAC,EAAE,CAACJ,UAAU,EAAEI,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5B,IAAIE,OAAO,EAAE,oBAAOR,OAAA;IAAAoB,QAAA,EAAM;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAC3C,IAAI,CAAClB,QAAQ,EAAE,oBAAON,OAAA;IAAAoB,QAAA,EAAM;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAExC,oBAAOxB,OAAA;IAAKyB,GAAG,EAAEnB,QAAS;IAACH,GAAG,EAAEA,GAAI;IAACC,KAAK,EAAEA;EAAM;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvD;AAACnB,EAAA,CA1CQJ,kBAAkB;AAAAyB,EAAA,GAAlBzB,kBAAkB;AA4C3B,eAAeA,kBAAkB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}