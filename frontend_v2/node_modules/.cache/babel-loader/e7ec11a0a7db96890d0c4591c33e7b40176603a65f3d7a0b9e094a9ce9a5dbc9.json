{"ast":null,"code":"import React,{useState}from'react';import{Container,Form,Button,Card,Alert}from'react-bootstrap';import{useParams,useNavigate,Link}from'react-router-dom';import{confirmPasswordReset}from'../services/api';// Correct path\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ConfirmPasswordResetPage(){const[password,setPassword]=useState('');const[password2,setPassword2]=useState('');const[message,setMessage]=useState('');const[error,setError]=useState('');const{token}=useParams();const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();if(password!==password2){setError('Passwords do not match.');return;}setError('');setMessage('');try{await confirmPasswordReset(token,password);setMessage('Your password has been successfully reset! Redirecting to login...');setTimeout(()=>navigate('/login'),3000);}catch(err){setError('Invalid or expired token. Please request a new password reset.');}};return/*#__PURE__*/_jsx(Container,{className:\"mt-5 d-flex justify-content-center\",children:/*#__PURE__*/_jsxs(Card,{style:{width:'400px'},children:[/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center mb-4\",children:\"Set New Password\"}),message&&/*#__PURE__*/_jsx(Alert,{variant:\"success\",children:message}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"New Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm New Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",value:password2,onChange:e=>setPassword2(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"div\",{className:\"d-grid\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Reset Password\"})})]})]}),/*#__PURE__*/_jsx(Card.Footer,{className:\"text-center\",children:/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Back to Login\"})})]})});}export default ConfirmPasswordResetPage;","map":{"version":3,"names":["React","useState","Container","Form","Button","Card","Alert","useParams","useNavigate","Link","confirmPasswordReset","jsx","_jsx","jsxs","_jsxs","ConfirmPasswordResetPage","password","setPassword","password2","setPassword2","message","setMessage","error","setError","token","navigate","handleSubmit","e","preventDefault","setTimeout","err","className","children","style","width","Body","variant","onSubmit","Group","Label","Control","type","value","onChange","target","required","Footer","to"],"sources":["/Users/abr/inventor/frontend/src/pages/ConfirmPasswordResetPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { confirmPasswordReset } from '../services/api'; // Correct path\n\nfunction ConfirmPasswordResetPage() {\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const { token } = useParams();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setError('Passwords do not match.');\n      return;\n    }\n    setError('');\n    setMessage('');\n    try {\n      await confirmPasswordReset(token, password);\n      setMessage('Your password has been successfully reset! Redirecting to login...');\n      setTimeout(() => navigate('/login'), 3000);\n    } catch (err) {\n      setError('Invalid or expired token. Please request a new password reset.');\n    }\n  };\n\n  return (\n    <Container className=\"mt-5 d-flex justify-content-center\">\n      <Card style={{ width: '400px' }}>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Set New Password</h2>\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>New Password</Form.Label>\n              <Form.Control type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Confirm New Password</Form.Label>\n              <Form.Control type=\"password\" value={password2} onChange={(e) => setPassword2(e.target.value)} required />\n            </Form.Group>\n            <div className=\"d-grid\">\n              <Button variant=\"primary\" type=\"submit\">\n                Reset Password\n              </Button>\n            </div>\n          </Form>\n        </Card.Body>\n        <Card.Footer className=\"text-center\">\n          <Link to=\"/login\">Back to Login</Link>\n        </Card.Footer>\n      </Card>\n    </Container>\n  );\n}\n\nexport default ConfirmPasswordResetPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,CAAEC,IAAI,CAAEC,MAAM,CAAEC,IAAI,CAAEC,KAAK,KAAQ,iBAAiB,CACtE,OAASC,SAAS,CAAEC,WAAW,CAAEC,IAAI,KAAQ,kBAAkB,CAC/D,OAASC,oBAAoB,KAAQ,iBAAiB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExD,QAAS,CAAAC,wBAAwBA,CAAA,CAAG,CAClC,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACiB,SAAS,CAAEC,YAAY,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACmB,OAAO,CAAEC,UAAU,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACqB,KAAK,CAAEC,QAAQ,CAAC,CAAGtB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAEuB,KAAM,CAAC,CAAGjB,SAAS,CAAC,CAAC,CAC7B,KAAM,CAAAkB,QAAQ,CAAGjB,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAkB,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAIZ,QAAQ,GAAKE,SAAS,CAAE,CAC1BK,QAAQ,CAAC,yBAAyB,CAAC,CACnC,OACF,CACAA,QAAQ,CAAC,EAAE,CAAC,CACZF,UAAU,CAAC,EAAE,CAAC,CACd,GAAI,CACF,KAAM,CAAAX,oBAAoB,CAACc,KAAK,CAAER,QAAQ,CAAC,CAC3CK,UAAU,CAAC,oEAAoE,CAAC,CAChFQ,UAAU,CAAC,IAAMJ,QAAQ,CAAC,QAAQ,CAAC,CAAE,IAAI,CAAC,CAC5C,CAAE,MAAOK,GAAG,CAAE,CACZP,QAAQ,CAAC,gEAAgE,CAAC,CAC5E,CACF,CAAC,CAED,mBACEX,IAAA,CAACV,SAAS,EAAC6B,SAAS,CAAC,oCAAoC,CAAAC,QAAA,cACvDlB,KAAA,CAACT,IAAI,EAAC4B,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAAF,QAAA,eAC9BlB,KAAA,CAACT,IAAI,CAAC8B,IAAI,EAAAH,QAAA,eACRpB,IAAA,OAAImB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAC,kBAAgB,CAAI,CAAC,CACrDZ,OAAO,eAAIR,IAAA,CAACN,KAAK,EAAC8B,OAAO,CAAC,SAAS,CAAAJ,QAAA,CAAEZ,OAAO,CAAQ,CAAC,CACrDE,KAAK,eAAIV,IAAA,CAACN,KAAK,EAAC8B,OAAO,CAAC,QAAQ,CAAAJ,QAAA,CAAEV,KAAK,CAAQ,CAAC,cACjDR,KAAA,CAACX,IAAI,EAACkC,QAAQ,CAAEX,YAAa,CAAAM,QAAA,eAC3BlB,KAAA,CAACX,IAAI,CAACmC,KAAK,EAACP,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BpB,IAAA,CAACT,IAAI,CAACoC,KAAK,EAAAP,QAAA,CAAC,cAAY,CAAY,CAAC,cACrCpB,IAAA,CAACT,IAAI,CAACqC,OAAO,EAACC,IAAI,CAAC,UAAU,CAACC,KAAK,CAAE1B,QAAS,CAAC2B,QAAQ,CAAGhB,CAAC,EAAKV,WAAW,CAACU,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE,CAACG,QAAQ,MAAE,CAAC,EAC9F,CAAC,cACb/B,KAAA,CAACX,IAAI,CAACmC,KAAK,EAACP,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC1BpB,IAAA,CAACT,IAAI,CAACoC,KAAK,EAAAP,QAAA,CAAC,sBAAoB,CAAY,CAAC,cAC7CpB,IAAA,CAACT,IAAI,CAACqC,OAAO,EAACC,IAAI,CAAC,UAAU,CAACC,KAAK,CAAExB,SAAU,CAACyB,QAAQ,CAAGhB,CAAC,EAAKR,YAAY,CAACQ,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE,CAACG,QAAQ,MAAE,CAAC,EAChG,CAAC,cACbjC,IAAA,QAAKmB,SAAS,CAAC,QAAQ,CAAAC,QAAA,cACrBpB,IAAA,CAACR,MAAM,EAACgC,OAAO,CAAC,SAAS,CAACK,IAAI,CAAC,QAAQ,CAAAT,QAAA,CAAC,gBAExC,CAAQ,CAAC,CACN,CAAC,EACF,CAAC,EACE,CAAC,cACZpB,IAAA,CAACP,IAAI,CAACyC,MAAM,EAACf,SAAS,CAAC,aAAa,CAAAC,QAAA,cAClCpB,IAAA,CAACH,IAAI,EAACsC,EAAE,CAAC,QAAQ,CAAAf,QAAA,CAAC,eAAa,CAAM,CAAC,CAC3B,CAAC,EACV,CAAC,CACE,CAAC,CAEhB,CAEA,cAAe,CAAAjB,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}