{"ast":null,"code":"// import axios from 'axios';\n\n// const api = axios.create({ baseURL: 'http://127.0.0.1:8000/api' });\n\n// // --- Auth ---\n// export const loginUser = (username, password) => api.post('/token/', { username, password });\n// export const registerUser = (userData) => api.post('/register/', userData);\n\n// // --- Products ---\n// export const getProducts = () => api.get('/products/');\n// export const createProduct = (product) => api.post('/products/', product);\n// export const updateProduct = (id, product) => api.put(`/products/${id}/`, product);\n// export const deleteProduct = (id) => api.delete(`/products/${id}/`);\n\n// // --- Suppliers ---\n// export const getSuppliers = () => api.get('/suppliers/');\n// export const createSupplier = (supplier) => api.post('/suppliers/', supplier);\n// export const updateSupplier = (id, supplier) => api.put(`/suppliers/${id}/`, supplier);\n// export const deleteSupplier = (id) => api.delete(`/suppliers/${id}/`);\n\n// // --- Purchase Orders ---\n// export const getPurchaseOrders = () => api.get('/purchase-orders/');\n// export const createPurchaseOrder = (orderData) => api.post('/purchase-orders/', orderData);\n// export const receivePurchaseOrder = (id) => api.post(`/purchase-orders/${id}/receive/`);\n\n// // --- Sales Orders ---\n// export const getSalesOrders = () => api.get('/sales-orders/');\n// export const createSalesOrder = (orderData) => api.post('/sales-orders/', orderData);\n\n// // --- Transactions & Dashboard ---\n// export const getTransactions = (params) => api.get('/transactions/', { params });\n// export const getDashboardStats = () => api.get('/dashboard-stats/');\n\n// export default api;\n\n// src/api/index.js\nimport axios from 'axios';\n\n// Create a new Axios instance\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api'\n});\n\n// Use an interceptor to automatically add the auth token to every request\napi.interceptors.request.use(config => {\n  const authTokens = localStorage.getItem('authTokens');\n  if (authTokens) {\n    const token = JSON.parse(authTokens).access;\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// --- Auth ---\nexport const loginUser = (username, password) => api.post('/token/', {\n  username,\n  password\n});\nexport const registerUser = userData => api.post('/register/', userData);\n\n// --- Profile Management ---\nexport const getUserProfile = () => api.get('/users/me/');\nexport const updateUserProfile = userData => api.patch('/users/me/', userData);\nexport const changePassword = passwordData => api.put('/change-password/', passwordData);\n\n// --- Products ---\nexport const getProducts = () => api.get('/products/');\nexport const createProduct = product => api.post('/products/', product);\nexport const updateProduct = (id, product) => api.put(`/products/${id}/`, product);\nexport const deleteProduct = id => api.delete(`/products/${id}/`);\n\n// --- Suppliers ---\nexport const getSuppliers = () => api.get('/suppliers/');\nexport const createSupplier = supplier => api.post('/suppliers/', supplier);\nexport const updateSupplier = (id, supplier) => api.put(`/suppliers/${id}/`, supplier);\nexport const deleteSupplier = id => api.delete(`/suppliers/${id}/`);\n\n// --- Purchase Orders ---\nexport const getPurchaseOrders = () => api.get('/purchase-orders/');\nexport const createPurchaseOrder = orderData => api.post('/purchase-orders/', orderData);\nexport const receivePurchaseOrder = id => api.post(`/purchase-orders/${id}/receive/`);\n\n// --- Sales Orders ---\nexport const getSalesOrders = () => api.get('/sales-orders/');\nexport const createSalesOrder = orderData => api.post('/sales-orders/', orderData);\n\n// --- Dashboard & Reports ---\nexport const getDashboardStats = () => api.get('/dashboard-stats/');\nexport const getTransactions = params => api.get('/transactions/', {\n  params\n});\nexport const patchProduct = (id, productData) => api.patch(`/products/${id}/`, productData);\nexport const requestPasswordReset = email => api.post('/password_reset/', {\n  email\n});\nexport const confirmPasswordReset = (token, password) => api.post('/password_reset/confirm/', {\n  token,\n  password\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","authTokens","localStorage","getItem","token","JSON","parse","access","headers","error","Promise","reject","loginUser","username","password","post","registerUser","userData","getUserProfile","get","updateUserProfile","patch","changePassword","passwordData","put","getProducts","createProduct","product","updateProduct","id","deleteProduct","delete","getSuppliers","createSupplier","supplier","updateSupplier","deleteSupplier","getPurchaseOrders","createPurchaseOrder","orderData","receivePurchaseOrder","getSalesOrders","createSalesOrder","getDashboardStats","getTransactions","params","patchProduct","productData","requestPasswordReset","email","confirmPasswordReset"],"sources":["/Users/abr/inventor/frontend_v2/src/services/api.js"],"sourcesContent":["// import axios from 'axios';\n\n// const api = axios.create({ baseURL: 'http://127.0.0.1:8000/api' });\n\n// // --- Auth ---\n// export const loginUser = (username, password) => api.post('/token/', { username, password });\n// export const registerUser = (userData) => api.post('/register/', userData);\n\n// // --- Products ---\n// export const getProducts = () => api.get('/products/');\n// export const createProduct = (product) => api.post('/products/', product);\n// export const updateProduct = (id, product) => api.put(`/products/${id}/`, product);\n// export const deleteProduct = (id) => api.delete(`/products/${id}/`);\n\n// // --- Suppliers ---\n// export const getSuppliers = () => api.get('/suppliers/');\n// export const createSupplier = (supplier) => api.post('/suppliers/', supplier);\n// export const updateSupplier = (id, supplier) => api.put(`/suppliers/${id}/`, supplier);\n// export const deleteSupplier = (id) => api.delete(`/suppliers/${id}/`);\n\n// // --- Purchase Orders ---\n// export const getPurchaseOrders = () => api.get('/purchase-orders/');\n// export const createPurchaseOrder = (orderData) => api.post('/purchase-orders/', orderData);\n// export const receivePurchaseOrder = (id) => api.post(`/purchase-orders/${id}/receive/`);\n\n// // --- Sales Orders ---\n// export const getSalesOrders = () => api.get('/sales-orders/');\n// export const createSalesOrder = (orderData) => api.post('/sales-orders/', orderData);\n\n// // --- Transactions & Dashboard ---\n// export const getTransactions = (params) => api.get('/transactions/', { params });\n// export const getDashboardStats = () => api.get('/dashboard-stats/');\n\n\n// export default api;\n\n// src/api/index.js\nimport axios from 'axios';\n\n// Create a new Axios instance\nconst api = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api',\n});\n\n// Use an interceptor to automatically add the auth token to every request\napi.interceptors.request.use(\n  (config) => {\n    const authTokens = localStorage.getItem('authTokens');\n    if (authTokens) {\n      const token = JSON.parse(authTokens).access;\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// --- Auth ---\nexport const loginUser = (username, password) => api.post('/token/', { username, password });\nexport const registerUser = (userData) => api.post('/register/', userData);\n\n// --- Profile Management ---\nexport const getUserProfile = () => api.get('/users/me/');\nexport const updateUserProfile = (userData) => api.patch('/users/me/', userData);\nexport const changePassword = (passwordData) => api.put('/change-password/', passwordData);\n\n// --- Products ---\nexport const getProducts = () => api.get('/products/');\nexport const createProduct = (product) => api.post('/products/', product);\nexport const updateProduct = (id, product) => api.put(`/products/${id}/`, product);\nexport const deleteProduct = (id) => api.delete(`/products/${id}/`);\n\n// --- Suppliers ---\nexport const getSuppliers = () => api.get('/suppliers/');\nexport const createSupplier = (supplier) => api.post('/suppliers/', supplier);\nexport const updateSupplier = (id, supplier) => api.put(`/suppliers/${id}/`, supplier);\nexport const deleteSupplier = (id) => api.delete(`/suppliers/${id}/`);\n\n// --- Purchase Orders ---\nexport const getPurchaseOrders = () => api.get('/purchase-orders/');\nexport const createPurchaseOrder = (orderData) => api.post('/purchase-orders/', orderData);\nexport const receivePurchaseOrder = (id) => api.post(`/purchase-orders/${id}/receive/`);\n\n// --- Sales Orders ---\nexport const getSalesOrders = () => api.get('/sales-orders/');\nexport const createSalesOrder = (orderData) => api.post('/sales-orders/', orderData);\n\n// --- Dashboard & Reports ---\nexport const getDashboardStats = () => api.get('/dashboard-stats/');\nexport const getTransactions = (params) => api.get('/transactions/', { params });\n\n\nexport const patchProduct = (id, productData) => api.patch(`/products/${id}/`, productData);\n\n\nexport const requestPasswordReset = (email) => api.post('/password_reset/', { email });\nexport const confirmPasswordReset = (token, password) => api.post('/password_reset/confirm/', { token, password });\n\n\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}