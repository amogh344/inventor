{"ast":null,"code":"var _jsxFileName = \"/Users/abr/inventor/frontend_v2/src/components/layout/Breadcrumbs.js\",\n  _s = $RefreshSig$();\n// src/components/layout/Breadcrumbs.js\nimport React from 'react';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Breadcrumbs() {\n  _s();\n  const location = useLocation();\n  const parts = location.pathname.split('/').filter(Boolean);\n  const crumbs = parts.map((part, idx) => {\n    const to = '/' + parts.slice(0, idx + 1).join('/');\n    const isLast = idx === parts.length - 1;\n    const label = part.replace(/-/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\n    return isLast ? /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n      active: true,\n      children: label\n    }, to, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n      linkAs: Link,\n      linkProps: {\n        to\n      },\n      children: label\n    }, to, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white border-bottom\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container py-2\",\n      children: /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        className: \"mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          linkAs: Link,\n          linkProps: {\n            to: '/'\n          },\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), crumbs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Breadcrumbs, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Breadcrumbs;\nexport default Breadcrumbs;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"names":["React","Breadcrumb","Link","useLocation","jsxDEV","_jsxDEV","Breadcrumbs","_s","location","parts","pathname","split","filter","Boolean","crumbs","map","part","idx","to","slice","join","isLast","length","label","replace","c","toUpperCase","Item","active","children","fileName","_jsxFileName","lineNumber","columnNumber","linkAs","linkProps","className","_c","$RefreshReg$"],"sources":["/Users/abr/inventor/frontend_v2/src/components/layout/Breadcrumbs.js"],"sourcesContent":["// src/components/layout/Breadcrumbs.js\nimport React from 'react';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction Breadcrumbs() {\n  const location = useLocation();\n  const parts = location.pathname.split('/').filter(Boolean);\n  const crumbs = parts.map((part, idx) => {\n    const to = '/' + parts.slice(0, idx + 1).join('/');\n    const isLast = idx === parts.length - 1;\n    const label = part.replace(/-/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\n    return isLast ? (\n      <Breadcrumb.Item active key={to}>{label}</Breadcrumb.Item>\n    ) : (\n      <Breadcrumb.Item linkAs={Link} linkProps={{ to }} key={to}>{label}</Breadcrumb.Item>\n    );\n  });\n\n  return (\n    <div className=\"bg-white border-bottom\">\n      <div className=\"container py-2\">\n        <Breadcrumb className=\"mb-0\">\n          <Breadcrumb.Item linkAs={Link} linkProps={{ to: '/' }}>Home</Breadcrumb.Item>\n          {crumbs}\n        </Breadcrumb>\n      </div>\n    </div>\n  );\n}\n\nexport default Breadcrumbs;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,KAAK,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;EAC1D,MAAMC,MAAM,GAAGL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,KAAK;IACtC,MAAMC,EAAE,GAAG,GAAG,GAAGT,KAAK,CAACU,KAAK,CAAC,CAAC,EAAEF,GAAG,GAAG,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;IAClD,MAAMC,MAAM,GAAGJ,GAAG,KAAKR,KAAK,CAACa,MAAM,GAAG,CAAC;IACvC,MAAMC,KAAK,GAAGP,IAAI,CAACQ,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;IAC5E,OAAOL,MAAM,gBACXhB,OAAA,CAACJ,UAAU,CAAC0B,IAAI;MAACC,MAAM;MAAAC,QAAA,EAAWN;IAAK,GAAVL,EAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0B,CAAC,gBAE1D5B,OAAA,CAACJ,UAAU,CAAC0B,IAAI;MAACO,MAAM,EAAEhC,IAAK;MAACiC,SAAS,EAAE;QAAEjB;MAAG,CAAE;MAAAW,QAAA,EAAWN;IAAK,GAAVL,EAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0B,CACpF;EACH,CAAC,CAAC;EAEF,oBACE5B,OAAA;IAAK+B,SAAS,EAAC,wBAAwB;IAAAP,QAAA,eACrCxB,OAAA;MAAK+B,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAC7BxB,OAAA,CAACJ,UAAU;QAACmC,SAAS,EAAC,MAAM;QAAAP,QAAA,gBAC1BxB,OAAA,CAACJ,UAAU,CAAC0B,IAAI;UAACO,MAAM,EAAEhC,IAAK;UAACiC,SAAS,EAAE;YAAEjB,EAAE,EAAE;UAAI,CAAE;UAAAW,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAAC,EAC5EnB,MAAM;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1B,EAAA,CAxBQD,WAAW;EAAA,QACDH,WAAW;AAAA;AAAAkC,EAAA,GADrB/B,WAAW;AA0BpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}