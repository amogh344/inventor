{"ast":null,"code":"var _jsxFileName = \"/Users/abr/inventor/frontend_v2/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useContext } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Decode JWT tokens\n\n// ------------------------------\n// Context Creation\n// ------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// ------------------------------\n// Provider Component\n// ------------------------------\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // --------------------------\n  // State Initialization\n  // --------------------------\n  const [tokens, setTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  const [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwtDecode(JSON.parse(localStorage.getItem('authTokens')).access) : null);\n\n  // --------------------------\n  // Login / Logout Handlers\n  // --------------------------\n  const loginUser = newTokens => {\n    setTokens(newTokens);\n    setUser(jwtDecode(newTokens.access));\n    localStorage.setItem('authTokens', JSON.stringify(newTokens));\n  };\n  const logoutUser = () => {\n    setTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n  };\n\n  // --------------------------\n  // Context Data\n  // --------------------------\n  const contextData = {\n    user,\n    tokens,\n    loginUser,\n    logoutUser\n  };\n\n  // --------------------------\n  // Provider Return\n  // --------------------------\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n// ------------------------------\n// Custom Hook to use AuthContext\n// ------------------------------\n_s(AuthProvider, \"H4zeVfZsqRoSVhA8CTZ0Hdt3q1A=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","tokens","setTokens","localStorage","getItem","JSON","parse","user","setUser","access","loginUser","newTokens","setItem","stringify","logoutUser","removeItem","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/abr/inventor/frontend_v2/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useState, useContext } from 'react';\nimport { jwtDecode } from 'jwt-decode'; // Decode JWT tokens\n\n// ------------------------------\n// Context Creation\n// ------------------------------\nconst AuthContext = createContext(null);\n\n// ------------------------------\n// Provider Component\n// ------------------------------\nexport const AuthProvider = ({ children }) => {\n  // --------------------------\n  // State Initialization\n  // --------------------------\n  const [tokens, setTokens] = useState(() => \n    localStorage.getItem('authTokens') \n      ? JSON.parse(localStorage.getItem('authTokens')) \n      : null\n  );\n  \n  const [user, setUser] = useState(() => \n    localStorage.getItem('authTokens') \n      ? jwtDecode(JSON.parse(localStorage.getItem('authTokens')).access) \n      : null\n  );\n\n  // --------------------------\n  // Login / Logout Handlers\n  // --------------------------\n  const loginUser = (newTokens) => {\n    setTokens(newTokens);\n    setUser(jwtDecode(newTokens.access));\n    localStorage.setItem('authTokens', JSON.stringify(newTokens));\n  };\n\n  const logoutUser = () => {\n    setTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n  };\n  \n  // --------------------------\n  // Context Data\n  // --------------------------\n  const contextData = {\n    user,\n    tokens,\n    loginUser,\n    logoutUser,\n  };\n  \n  // --------------------------\n  // Provider Return\n  // --------------------------\n  return (\n    <AuthContext.Provider value={contextData}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// ------------------------------\n// Custom Hook to use AuthContext\n// ------------------------------\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;;AAExC;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;;AAEvC;AACA;AACA;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C;EACA;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,MACnCW,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAC9BC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,GAC9C,IACN,CAAC;EAED,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,MAC/BW,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,GAC9BV,SAAS,CAACW,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAACK,MAAM,CAAC,GAChE,IACN,CAAC;;EAED;EACA;EACA;EACA,MAAMC,SAAS,GAAIC,SAAS,IAAK;IAC/BT,SAAS,CAACS,SAAS,CAAC;IACpBH,OAAO,CAACd,SAAS,CAACiB,SAAS,CAACF,MAAM,CAAC,CAAC;IACpCN,YAAY,CAACS,OAAO,CAAC,YAAY,EAAEP,IAAI,CAACQ,SAAS,CAACF,SAAS,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBZ,SAAS,CAAC,IAAI,CAAC;IACfM,OAAO,CAAC,IAAI,CAAC;IACbL,YAAY,CAACY,UAAU,CAAC,YAAY,CAAC;EACvC,CAAC;;EAED;EACA;EACA;EACA,MAAMC,WAAW,GAAG;IAClBT,IAAI;IACJN,MAAM;IACNS,SAAS;IACTI;EACF,CAAC;;EAED;EACA;EACA;EACA,oBACElB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAEF,WAAY;IAAAjB,QAAA,EACtCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AACA;AACA;AAAAtB,EAAA,CArDaF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAsDzB,OAAO,MAAM0B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOhC,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;AAAC4B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}