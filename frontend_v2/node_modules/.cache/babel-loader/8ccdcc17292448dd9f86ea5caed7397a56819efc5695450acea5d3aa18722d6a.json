{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetLeft\", \"columnsTotalWidth\", \"firstColumnIndex\", \"lastColumnIndex\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"scrollbarWidth\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useForkRef from '@mui/utils/useForkRef';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { isObjectEmpty } from '@mui/x-internals/isObjectEmpty';\nimport { GridEditModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, PinnedColumnPosition } from \"../internals/constants.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowNodeSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector, gridRowIsEditingSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { gridIsRowDragActiveSelector } from \"../hooks/features/rowReorder/gridRowReorderSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { createSelector } from \"../utils/createSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst isRowReorderingEnabledSelector = createSelector(gridEditRowsStateSelector, (editRows, {\n  rowReordering,\n  treeData\n}) => {\n  if (!rowReordering || treeData) {\n    return false;\n  }\n  const isEditingRows = !isObjectEmpty(editRows);\n  return !isEditingRows;\n});\nconst GridRow = forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      columnsTotalWidth,\n      firstColumnIndex,\n      lastColumnIndex,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      scrollbarWidth,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const rowReordering = rootProps.rowReordering;\n  const treeData = rootProps.treeData;\n  const isRowReorderingEnabled = useGridSelector(apiRef, isRowReorderingEnabledSelector, {\n    rowReordering,\n    treeData\n  });\n  const isRowDragActive = useGridSelector(apiRef, gridIsRowDragActiveSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = gridRowNodeSelector(apiRef, rowId);\n  const editing = useGridSelector(apiRef, gridRowIsEditingSelector, {\n    rowId,\n    editMode: rootProps.editMode\n  });\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), undefined, objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n\n  // HACK: Sometimes, the rowNode has already been removed from the state but the row is still rendered.\n  if (!rowNode) {\n    return null;\n  }\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = getRowAriaAttributes(rowNode, index);\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedColumnPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(pinnedPosition, column.computedWidth, indexRelativeToAllColumns, columnPositions, columnsTotalWidth, scrollbarWidth);\n    if (rowNode.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = isRowReorderingEnabled && !sortModel.length;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow || isRowDragActive);\n    const cellIsNotVisible = pinnedPosition === PinnedColumnPosition.VIRTUAL;\n    const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n    const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      showLeftBorder: showLeftBorder,\n      showRightBorder: showRightBorder,\n      row: row,\n      rowNode: rowNode\n    }, slotProps?.cell), column.field);\n  };\n  if (process.env.NODE_ENV !== \"production\") getCell.displayName = \"getCell\";\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedColumnPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedColumnPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedColumnPosition.VIRTUAL));\n  }\n  for (let i = firstColumnIndex; i < lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedColumnPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    ref: handleRef,\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: clsx(gridClasses.cell, gridClasses.cellEmpty)\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0,\n      borderTop: !isFirstVisible\n    })]\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") GridRow.displayName = \"GridRow\";\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnsTotalWidth: PropTypes.number.isRequired,\n  firstColumnIndex: PropTypes.number.isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  lastColumnIndex: PropTypes.number.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  scrollbarWidth: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","useForkRef","fastMemo","forwardRef","isObjectEmpty","GridEditModes","GridCellModes","gridClasses","composeGridClasses","useGridRootProps","shouldCellShowLeftBorder","shouldCellShowRightBorder","gridColumnPositionsSelector","useGridSelector","objectShallowCompare","useGridVisibleRows","findParentElementFromClassName","isEventTargetInPortal","GRID_CHECKBOX_SELECTION_COL_DEF","GRID_ACTIONS_COLUMN_TYPE","GRID_DETAIL_PANEL_TOGGLE_FIELD","PinnedColumnPosition","gridSortModelSelector","gridRowNodeSelector","gridEditRowsStateSelector","gridRowIsEditingSelector","gridIsRowDragActiveSelector","GridScrollbarFillerCell","ScrollbarFiller","getPinnedCellOffset","useGridConfiguration","useGridPrivateApiContext","createSelector","jsx","_jsx","jsxs","_jsxs","isRowReorderingEnabledSelector","editRows","rowReordering","treeData","isEditingRows","GridRow","props","refProp","selected","rowId","row","index","style","styleProp","rowHeight","className","visibleColumns","pinnedColumns","offsetLeft","columnsTotalWidth","firstColumnIndex","lastColumnIndex","focusedColumnIndex","isFirstVisible","isLastVisible","isNotVisible","showBottomBorder","scrollbarWidth","gridHasFiller","onClick","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOut","onMouseOver","other","apiRef","configuration","ref","useRef","rootProps","currentPage","sortModel","columnPositions","isRowReorderingEnabled","isRowDragActive","handleRef","rowNode","editing","editMode","editable","Row","hasFocusCell","undefined","hasVirtualFocusCellLeft","left","length","hasVirtualFocusCellRight","right","classes","root","getRowAriaAttributes","hooks","useGridRowAriaAttributes","useLayoutEffect","range","rowIndex","current","getRowIndexRelativeToVisibleRows","unstable_setLastMeasuredRowIndex","observeRowHeight","publish","useCallback","eventName","propHandler","event","getRow","publishEvent","getRowParams","publishClick","cell","target","field","getAttribute","getCellMode","Edit","column","getColumn","type","slots","slotProps","disableColumnReorder","heightEntry","getRowHeightEntry","useMemo","opacity","width","height","rowStyle","maxHeight","minHeight","spacingTop","property","rowSpacingType","spacingBottom","propertyValue","parseInt","rowClassNames","unstable_applyPipeProcessors","ariaAttributes","getRowClassName","indexRelativeToCurrentPage","firstRowIndex","rowParams","rows","push","getCell","indexInSection","indexRelativeToAllColumns","sectionLength","pinnedPosition","NONE","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","cellProps","computedWidth","colSpan","pinnedOffset","skeletonCell","align","isReorderCell","canReorderColumn","disableReorder","canReorderRow","disableDragEvents","cellIsNotVisible","VIRTUAL","showLeftBorder","showRightBorder","showCellVerticalBorder","colIndex","process","env","NODE_ENV","displayName","leftCells","map","i","LEFT","rightCells","RIGHT","middleColumnsLength","cells","eventHandlers","role","children","cellOffsetLeft","cellEmpty","pinnedRight","borderTop","propTypes","number","isRequired","bool","func","object","oneOfType","oneOf","string","arrayOf","MemoizedGridRow"],"sources":["/Users/abr/inventor/frontend_v2/node_modules/@mui/x-data-grid/esm/components/GridRow.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetLeft\", \"columnsTotalWidth\", \"firstColumnIndex\", \"lastColumnIndex\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"scrollbarWidth\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useForkRef from '@mui/utils/useForkRef';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { isObjectEmpty } from '@mui/x-internals/isObjectEmpty';\nimport { GridEditModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, PinnedColumnPosition } from \"../internals/constants.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowNodeSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector, gridRowIsEditingSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { gridIsRowDragActiveSelector } from \"../hooks/features/rowReorder/gridRowReorderSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { createSelector } from \"../utils/createSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst isRowReorderingEnabledSelector = createSelector(gridEditRowsStateSelector, (editRows, {\n  rowReordering,\n  treeData\n}) => {\n  if (!rowReordering || treeData) {\n    return false;\n  }\n  const isEditingRows = !isObjectEmpty(editRows);\n  return !isEditingRows;\n});\nconst GridRow = forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      columnsTotalWidth,\n      firstColumnIndex,\n      lastColumnIndex,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      scrollbarWidth,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const rowReordering = rootProps.rowReordering;\n  const treeData = rootProps.treeData;\n  const isRowReorderingEnabled = useGridSelector(apiRef, isRowReorderingEnabledSelector, {\n    rowReordering,\n    treeData\n  });\n  const isRowDragActive = useGridSelector(apiRef, gridIsRowDragActiveSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = gridRowNodeSelector(apiRef, rowId);\n  const editing = useGridSelector(apiRef, gridRowIsEditingSelector, {\n    rowId,\n    editMode: rootProps.editMode\n  });\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), undefined, objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n\n  // HACK: Sometimes, the rowNode has already been removed from the state but the row is still rendered.\n  if (!rowNode) {\n    return null;\n  }\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = getRowAriaAttributes(rowNode, index);\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedColumnPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(pinnedPosition, column.computedWidth, indexRelativeToAllColumns, columnPositions, columnsTotalWidth, scrollbarWidth);\n    if (rowNode.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = isRowReorderingEnabled && !sortModel.length;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow || isRowDragActive);\n    const cellIsNotVisible = pinnedPosition === PinnedColumnPosition.VIRTUAL;\n    const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n    const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      showLeftBorder: showLeftBorder,\n      showRightBorder: showRightBorder,\n      row: row,\n      rowNode: rowNode\n    }, slotProps?.cell), column.field);\n  };\n  if (process.env.NODE_ENV !== \"production\") getCell.displayName = \"getCell\";\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedColumnPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedColumnPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedColumnPosition.VIRTUAL));\n  }\n  for (let i = firstColumnIndex; i < lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedColumnPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    ref: handleRef,\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: clsx(gridClasses.cell, gridClasses.cellEmpty)\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0,\n      borderTop: !isFirstVisible\n    })]\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") GridRow.displayName = \"GridRow\";\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnsTotalWidth: PropTypes.number.isRequired,\n  firstColumnIndex: PropTypes.number.isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  lastColumnIndex: PropTypes.number.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  scrollbarWidth: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}